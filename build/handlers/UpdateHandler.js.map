{"version":3,"sources":["../../src/handlers/UpdateHandler.js"],"names":["handle","fs","require","req","resp","pipe","readFile","encoding","err","data","console","log","send","configJSON","JSON","parse","json","subscribe"],"mappings":"AAAA;;;;;;;;;;QAOgBA,M,GAAAA,M;;AAJhB;;AACA;;;;AAFA,IAAIC,KAAKC,QAAQ,IAAR,CAAT;AAKO,SAASF,MAAT,CAAgBG,GAAhB,EAAqBC,IAArB,EAA2B;AAC9B,kBAAG,CAAH,EACKC,IADL,CACU,0BAAU,YAAM;AAClBJ,WAAGK,QAAH,CAAY,6BAAZ,EAA2C,EAAEC,UAAU,MAAZ,EAA3C,EACI,UAACC,GAAD,EAAMC,IAAN,EAAe;AACX,gBAAID,GAAJ,EAAS;AACLE,wBAAQC,GAAR,CAAYH,GAAZ;AACAJ,qBAAKQ,IAAL,CAAU,yBAAeJ,GAAf,CAAV;AACA;AACH;AACD,gBAAIK,aAAaC,KAAKC,KAAL,CAAWN,IAAX,CAAjB;AACAL,iBAAKY,IAAL,CAAU,yBAAeH,UAAf,CAAV;AACH,SATL;AAUH,KAXK,CADV,EAcKI,SAdL;AAeH;;AAED","file":"UpdateHandler.js","sourcesContent":["'use strict';\n\nlet fs = require('fs');\nimport { Observable, Subject, ReplaySubject, from, of, range } from 'rxjs';\nimport { map, filter, switchMap, concatMap } from 'rxjs/operators';\n\n\nexport function handle(req, resp) {\n    of(1)\n        .pipe(concatMap(() => {\n            fs.readFile('./public/bundle/config.json', { encoding: 'utf8' },\n                (err, data) => {\n                    if (err) {\n                        console.log(err);\n                        resp.send(JSON.stringify(err));\n                        return;\n                    }\n                    let configJSON = JSON.parse(data);\n                    resp.json(JSON.stringify(configJSON));\n                });\n        }))\n        \n        .subscribe();\n}\n\n// module.exports = { handle };"]}